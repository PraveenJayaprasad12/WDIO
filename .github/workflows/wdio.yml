name: WebdriverIO Tests

on:
  [push]

jobs:
  test1:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        suites: ['smoke']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run ${{ matrix.suites }} suite
        run: npm run ${{ matrix.suites }}

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.suites }} HTML
          path: reports/test-report.html

  test2:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        suites: ['regression']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run ${{ matrix.suites }} suite
        run: npm run ${{ matrix.suites }}

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.suites }}
          path: reports/test-report.html

  publish-reports:
    needs: [test1, test2]
    if: always()
    runs-on: windows-latest
    permissions:
      contents: write  # Needed to push to the gh-pages branch
      pages: write     # Needed if using GitHub Pages
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Create reports directory
        shell: powershell
        run: New-Item -ItemType Directory -Force -Path "reports"

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: reports
          merge-multiple: false

      - name: Keep only files with "html" in the name
        shell: powershell
        run: |
          $searchString = "html"
          $allFiles = Get-ChildItem -Path "reports" -Recurse -File
      
          foreach ($file in $allFiles) {
            if ($file.Name -like "*$searchString*") {
              Write-Host "‚úÖ Keeping: $($file.FullName)"
            } else {
              Write-Host "üóëÔ∏è Removing: $($file.FullName)"
              Remove-Item -Force $file.FullName
            }
          }



      - name: Generate styled index.html
        shell: powershell
        run: |
          $indexFile = "reports/index.html"
          
          @"
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Test Reports Index</title>
              <style>
                  body { font-family: Arial, sans-serif; background-color: #f9f9f9; padding: 20px; margin: 0; }
                  h1 { color: #333; text-align: center; margin-bottom: 30px; }
                  ul { list-style-type: none; padding: 0; max-width: 800px; margin: 0 auto; }
                  li { margin: 10px 0; }
                  a { display: block; padding: 15px 20px; background-color: #007BFF; color: white; text-decoration: none; border-radius: 5px; transition: background-color 0.3s ease; font-size: 16px; }
                  a:hover { background-color: #0056b3; }
              </style>
          </head>
          <body>
              <h1>Test Suite Reports</h1>
              <ul>
          "@ | Out-File $indexFile -Append -Encoding utf8
          # Loop through subfolders inside reports/
          Get-ChildItem -Directory "reports" | ForEach-Object {
              $artifactName = $_.Name
              Get-ChildItem -Path $_.FullName -Filter *.html -Recurse | ForEach-Object {
                 $relativePath = Resolve-Path -Relative $_.FullName | ForEach-Object { $_ -replace "^.*?reports[\\/]", "" -replace "\\", "/" } 
                  $linkText = "$artifactName - $($_.Name)"
                  "        <li><a href=""$relativePath"">$linkText</a></li>" | Out-File $indexFile -Append -Encoding utf8
              }
          }
          
          @"
              </ul>
          </body>
          </html>
          "@ | Out-File $indexFile -Append -Encoding utf8
      - name: Upload zipped report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: consolidated-report
          path: reports
      - name: Deploy to GitHub Pages (gh-pages branch)
        shell: powershell
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git config --global core.autocrlf false
          New-Item -ItemType Directory -Path temp-pages -Force
          Copy-Item -Recurse -Path reports\* -Destination temp-pages
          Set-Location temp-pages
          git init
          git checkout -b gh-pages
          git add .
          git commit -m "Deploy reports to GitHub Pages"
          $repoUrl = "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
          git push --force $repoUrl gh-pages
